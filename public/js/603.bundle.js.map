{"version":3,"file":"./js/603.bundle.js","mappings":"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","sources":["webpack://isomorphic-react/./src/graphql/coinMeta.graphql","webpack://isomorphic-react/./src/host.js","webpack://isomorphic-react/./src/jsx/AddRemove.jsx","webpack://isomorphic-react/./src/jsx/Coin.jsx"],"sourcesContent":["\n    \n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"CoinMeta\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"coinMeta\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"category\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"logo\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"subreddit\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notice\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"urls\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"website\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"twitter\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message_board\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"chat\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"facebook\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"explorer\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"reddit\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"technical_doc\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"source_code\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"announcement\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"platform\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"token_address\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date_added\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date_launched\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_hidden\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"self_reported_circulating_supply\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"self_reported_market_cap\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"quote\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"volume_24h\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"volume_change_24h\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent_change_1h\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent_change_24h\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent_change_7d\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent_change_30d\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent_change_60d\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent_change_90d\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"market_cap\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"market_cap_dominance\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"fully_diluted_market_cap\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"last_updated\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]};\n  \n\n    \n  var names = {};\n  function unique(defs) {\n    return defs.filter(function (def) {\n      if (def.kind !== 'FragmentDefinition') return true;\n      var name = def.name.value;\n      if (names[name]) {\n        return false;\n      } else {\n        names[name] = true;\n        return true;\n      }\n    });\n  };\n\n  \n\n    module.exports = doc\n  \n","export function hostInside() {\n  return process.env.NODE_ENV === 'production'\n    ? 'https://cheapcrypto.app'\n    : 'https://localhost:3000';\n}\n\nexport function hostOutside() {\n  return process.env.NODE_ENV === 'production'\n    ? 'https://cheapcrypto.app'\n    : 'https://localhost:3000';\n}\n","import React, {useContext} from 'react';\nimport {useQueryClient, useQuery, useMutation} from 'react-query';\nimport fetch from 'cross-fetch';\nimport {UserContext} from '../context';\nimport { Button } from '@mui/material';\n\nexport default function AddRemove(props) {\n  const {collectionKey, collectionValue} = props;\n  const user = useContext(UserContext).user;\n  const {id, email} = user;\n  const params = new URLSearchParams({\n    id,\n    email,\n    collectionKey,\n  });\n  const {data} = useQuery(collectionKey, async () => {\n    if (id) {\n      return await fetch(`/get-user-collection?${params}`).then(response => response.json());\n    }\n  });\n\n  const collectionIds = data && data.map(coin => coin.id);\n  const operation = collectionIds && collectionIds.includes(collectionValue) ? 'remove' : 'add';\n  const queryClient = useQueryClient();\n  const mutation = useMutation(\n    listItem => {\n      const paramString = new URLSearchParams(listItem).toString();\n      return fetch(`/update-user-collection?${paramString}`, {\n        method: 'POST',\n      }).then(response => response.json());\n    },\n    {\n      onSuccess: data => {\n        queryClient.setQueryData(collectionKey, data);\n        queryClient.invalidateQueries(collectionKey);\n      },\n    }\n  );\n\n  function handleAddRemove() {\n    mutation.mutate({\n      collectionKey,\n      collectionValue,\n      id,\n      email,\n      operation,\n    });\n  }\n\n  if (Object.keys(user).length === 0) {\n    return <div className=\"add-remove\" />;\n  }\n\n  if (!data) {\n    return <div className=\"add-remove\" />;\n  }\n\n  return (\n    <div className=\"add-remove\">\n      <Button onClick={handleAddRemove} color=\"primary\" align=\"center\" variant=\"contained\">\n        {`${operation} ${operation === 'add' ? 'to' : 'from'}`} watchlist\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport {useParams, Link} from 'react-router-dom';\nimport {useQuery} from 'react-query';\nimport {print} from 'graphql';\nimport {request, gql} from 'graphql-request';\nimport AddRemove from './AddRemove.jsx';\nimport WebIcon from '@mui/icons-material/Web';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport MessageIcon from '@mui/icons-material/Message';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport ExploreIcon from '@mui/icons-material/Explore';\nimport RedditIcon from '@mui/icons-material/Reddit';\nimport ArticleIcon from '@mui/icons-material/Article';\nimport CodeIcon from '@mui/icons-material/Code';\nimport AnnouncementIcon from '@mui/icons-material/Announcement';\nimport MyTooltip from './MyTooltip.jsx';\nimport {formatNumber, formatSmallNumber, formatTime, formatDate} from '../data/utils';\nimport {hostOutside} from '../host';\nimport {\n  Typography,\n  Avatar,\n  Stack,\n  Card,\n  Box,\n  Paper,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Alert,\n  Container,\n  useMediaQuery,\n} from '@mui/material';\nimport {tableCellClasses} from '@mui/material/TableCell';\nimport {styled} from '@mui/material/styles';\n\nfunction alternatingRows(Row) {\n  return styled(Row)(({theme}) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n}\n\nexport default function Coin() {\n  const params = useParams();\n  const isDesktop = useMediaQuery('(min-width:620px)');\n  //const tableCellClasses = TableCell.tableCellClasses;\n  const StyledTableCell = styled(TableCell)(({theme}) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\n  const StyledTableRow = alternatingRows(TableRow);\n  const StyledListItem = alternatingRows(ListItem);\n\n  let status, isLoading, error, data;\n\n  // avoid SSR, sorry no isomorphic here.\n  if (typeof process !== 'object') {\n    const coinId = params.coinId;\n    const endpoint = `${hostOutside()}/graphql`;\n    const query = gql`\n      ${print(require('../graphql/coinMeta.graphql'))}\n    `;\n    const variables = {id: coinId};\n\n    ({status, isLoading, error, data} = useQuery(['coinMeta', coinId], () =>\n      request(endpoint, query, variables).then(data => data && data.coinMeta)\n    ));\n  }\n\n  if (isLoading) {\n    return (\n      <Box m={2}>\n        <Stack p={2} direction=\"row\" spacing={1}>\n          <LinearProgress />\n        </Stack>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return 'An error has occurred: ' + error.message;\n  }\n\n  const {\n    id,\n    name,\n    symbol,\n    logo,\n    description,\n    notice,\n    subreddit,\n    urls,\n    platform,\n    date_added,\n    date_launched,\n    is_hidden,\n    self_reported_circulating_supply,\n    self_reported_market_cap,\n    quote,\n  } = data;\n\n  const {platform_id, platform_name, platform_symbol, token_address} = platform;\n\n  const miscData = Object.entries(data)\n    .map(([key, value]) => {\n      if (\n        !(\n          key === 'urls' ||\n          key === 'quote' ||\n          key === 'platform' ||\n          key === 'notice' ||\n          key === 'description' ||\n          key === 'id' ||\n          key === 'is_hidden' ||\n          key === 'logo' ||\n          key === 'name' ||\n          key === 'symbol'\n        )\n      ) {\n        if (key.indexOf('date') > -1 && value) {\n          return {[key]: <MyTooltip label={formatDate(value)} title={formatTime(value)} />};\n        } else if (key.indexOf('self_reported') > -1 && value) {\n          return {\n            [key]: (\n              <MyTooltip\n                label={formatNumber(Number(value), 4)}\n                title={Number(value).toLocaleString()}\n              />\n            ),\n          };\n        } else {\n          return {[key]: value};\n        }\n      }\n    })\n    .filter(item => {\n      const itemKey = item && Object.keys(item)[0];\n      const itemValue = item && item[Object.keys(item)[0]];\n      if (itemValue) {\n        return item;\n      }\n    });\n\n  const quoteData = Object.entries(quote)\n    .map(([key, value]) => {\n      if (key.indexOf('last_updated') > -1 && value) {\n        return {[key]: <MyTooltip label={formatDate(value)} title={formatTime(value)} />};\n      } else {\n        return {\n          [key]: <MyTooltip title={formatSmallNumber(Number(value), 4)} label={value} />,\n        };\n      }\n    })\n    .filter(item => {\n      const itemKey = item && Object.keys(item)[0];\n      const itemValue = item && item[Object.keys(item)[0]];\n      if (itemValue) {\n        return item;\n      }\n    });\n\n  const links = Object.entries(urls).map(([key, value]) => ({\n    name: [key][0],\n    urls: value,\n    icon: key => {\n      switch (key) {\n        case 'website':\n          return <WebIcon />;\n        case 'twitter':\n          return <TwitterIcon />;\n        case 'message_board':\n          return <MessageIcon />;\n        case 'chat':\n          return <ChatIcon />;\n        case 'facebook':\n          return <FacebookIcon />;\n        case 'explorer':\n          return <ExploreIcon />;\n        case 'reddit':\n          return <RedditIcon />;\n        case 'technical_doc':\n          return <ArticleIcon />;\n        case 'source_code':\n          return <CodeIcon />;\n        case 'announcement':\n          return <AnnouncementIcon />;\n      }\n    },\n  }));\n\n  const platformData = Object.entries(platform).map(([key, value]) => {\n    if (key === 'token_address') {\n      switch (platform.symbol) {\n        case 'BNB':\n          return {\n            [key]: `https://bscscan.com/token/${value}`,\n          };\n        case 'ETH':\n          return {\n            [key]: `https://etherscan.io/token/${value}`,\n          };\n        default:\n          return {[key]: value};\n      }\n    } else {\n      return {[key]: value};\n    }\n  });\n\n  let backgroundColor = '#fff';\n\n  return (\n    <div style={{maxWidth: '1280px'}} className=\"coinInfo\">\n      <Stack m={2} direction=\"row\" alignItems=\"center\">\n        <Avatar src={logo} sx={{width: '75px', height: '75px'}} />\n        <Typography variant=\"h6\" m={2} gutterBottom component=\"h1\">\n          {name} ({symbol})\n        </Typography>\n      </Stack>\n      <Box sx={{minWidth: '220px', textAlign: 'left', paddingLeft: '20px'}}>\n        <Stack direction=\"row\" alignItems=\"center\">\n          <AddRemove collectionKey={'coins'} collectionValue={id} />\n          {quote && quote.price ? (\n            <>\n              <Typography m={2} sx={{marginRight: '0'}}>\n                <strong>QUOTE :</strong>{' '}\n              </Typography>\n              <MyTooltip title={formatSmallNumber(Number(quote.price), 4)} label={quote.price} />\n            </>\n          ) : null}\n        </Stack>\n      </Box>\n      {notice ? (\n        <Alert severity=\"error\" sx={{marginTop: '20px', overflowX: 'scroll'}}>\n          {notice}\n        </Alert>\n      ) : null}\n      <Typography\n        sx={{fontSize: '1.1rem', lineHeight: '1.8', padding: '20px'}}\n        variant=\"body1\"\n        gutterBottom\n      >\n        {description}\n      </Typography>\n\n      <Stack direction={isDesktop ? 'row' : 'column'}>\n        <Container sx={{paddingBottom: '40px'}}>\n          <Typography variant=\"h6\" gutterBottom component=\"h2\">\n            External Links\n          </Typography>\n          <List>\n            {links.map((link, index) => {\n              if (link.urls.length === 0) {\n                return null;\n              }\n\n              return (\n                <StyledListItem key={index}>\n                  <ListItemIcon sx={{minWidth: '36px'}}>{link.icon(link.name)}</ListItemIcon>\n                  <ListItemText primary={link && link.name && link.name.replaceAll('_', ' ')} />\n                  {link.urls.map(url => (\n                    <Button\n                      key={url}\n                      href={url}\n                      target=\"_blank\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      sx={{margin: '0 10px 0 20px'}}\n                    >\n                      Open\n                    </Button>\n                  ))}\n                </StyledListItem>\n              );\n            })}\n          </List>\n        </Container>\n        <Container sx={{paddingBottom: '40px'}}>\n          <Typography variant=\"h6\" gutterBottom component=\"h2\">\n            Misc Information\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableBody>\n                {miscData.map((item, index) => {\n                  return (\n                    <StyledTableRow key={index}>\n                      <StyledTableCell align=\"left\">\n                        <strong style={{textTransform: 'capitalize'}}>\n                          {Object.keys(item)[0].replaceAll('_', ' ')}\n                        </strong>\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">{item[Object.keys(item)[0]]}</StyledTableCell>\n                    </StyledTableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n      </Stack>\n\n      <Stack direction={isDesktop ? 'row' : 'column'}>\n        <Container sx={{paddingBottom: '40px'}}>\n          <Typography variant=\"h6\" gutterBottom component=\"h2\">\n            Quote Information\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableBody>\n                {quoteData.map((item, index) => {\n                  return (\n                    <StyledTableRow key={index}>\n                      <StyledTableCell align=\"left\">\n                        <strong style={{textTransform: 'capitalize'}}>\n                          {Object.keys(item)[0].replaceAll('_', ' ')}\n                        </strong>\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">{item[Object.keys(item)[0]]}</StyledTableCell>\n                    </StyledTableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n        <Container sx={{paddingBottom: '40px'}}>\n          <Typography variant=\"h6\" gutterBottom component=\"h2\">\n            Platform Information\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableBody>\n                {platformData.map((item, index) => {\n                  const key = Object.keys(item)[0];\n                  const value = item[key];\n                  let platformLabel = '';\n\n                  if (key === 'token_address') {\n                    switch (platform.symbol) {\n                      case 'BNB':\n                        platformLabel = 'BscScan';\n                        break;\n                      case 'ETH':\n                        platformLabel = 'Etherscan';\n                        break;\n                      default:\n                        platformLabel = key.replaceAll('_', ' ');\n                    }\n                  } else {\n                    platformLabel = key.replaceAll('_', ' ');\n                  }\n\n                  return (\n                    <StyledTableRow key={index}>\n                      <StyledTableCell align=\"left\">\n                        <strong style={{textTransform: 'capitalize'}}>\n                          {key === 'token_address'\n                            ? 'Blockchain Explorer'\n                            : key.replaceAll('_', ' ')}\n                        </strong>\n                      </StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                        {key === 'token_address' ? (\n                          <Button\n                            sx={{textTransform: 'none'}}\n                            variant=\"contained\"\n                            target=\"_blank\"\n                            href={value}\n                          >\n                            {platformLabel}\n                          </Button>\n                        ) : (\n                          value\n                        )}\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n      </Stack>\n    </div>\n  );\n}\n"],"names":["module","exports","hostInside","hostOutside","AddRemove","props","collectionKey","collectionValue","user","useContext","UserContext","id","email","params","URLSearchParams","data","useQuery","fetch","then","response","json","collectionIds","map","coin","operation","includes","queryClient","useQueryClient","mutation","useMutation","listItem","paramString","toString","method","onSuccess","setQueryData","invalidateQueries","Object","keys","length","className","onClick","mutate","color","align","variant","alternatingRows","Row","styled","backgroundColor","theme","palette","action","hover","border","Coin","isLoading","error","useParams","isDesktop","useMediaQuery","StyledTableCell","TableCell","tableCellClasses","common","black","white","fontSize","StyledTableRow","TableRow","StyledListItem","ListItem","process","coinId","endpoint","query","gql","print","require","variables","request","coinMeta","status","m","p","direction","spacing","message","name","symbol","logo","description","notice","urls","subreddit","platform","quote","date_added","date_launched","is_hidden","self_reported_circulating_supply","self_reported_market_cap","miscData","platform_id","platform_name","platform_symbol","token_address","entries","key","value","indexOf","MyTooltip","label","formatDate","title","formatTime","formatNumber","Number","toLocaleString","filter","item","quoteData","formatSmallNumber","links","icon","Web","Twitter","Message","Chat","Facebook","Explore","Reddit","Article","Code","Announcement","platformData","style","maxWidth","alignItems","src","sx","width","height","gutterBottom","component","minWidth","textAlign","paddingLeft","price","marginRight","severity","marginTop","overflowX","lineHeight","padding","paddingBottom","link","index","primary","replaceAll","url","href","target","size","margin","textTransform","platformLabel"],"sourceRoot":""}